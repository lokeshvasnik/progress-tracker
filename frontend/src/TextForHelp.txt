Private data endpoints > Crud

https://crudcrud.com/api/a6d79d4fd6024834b9f14670fa683783 > api key

Successfully able to add the data in the database 

Authenction

1. Login

2. Signup

Using firebase


Formula for progress percentage %

🔍 1. Progress Over Time: 40%
✅ What it means:
You’re probably tracking a 30-day challenge, and want to show how much of it is completed.

progressPercent = (numberOfDaysWithProgress / 30) * 100
🧠 Example:


const totalChallengeDays = 30;
const currentProgressDays = data.length;

const progressPercent = Math.round((currentProgressDays / totalChallengeDays) * 100);

progressPercent = Math.round((17 / 30) * 100) = 57%


Day One

1. Authencatio in this application via firebase - 16 July 2025

Signup > Firestore > Auth > Login > Check > Dashboard - 16 July 2026 12.00 AM

Tomorrow task - Understand the firebase and usefffect logic ask doubts to chatgpt 

Make the UI proper and start with node js backend integration part easy and simple

----------------

16 July Task - 

✅ Firebase Auth + Express + MongoDB Setup Tasks

 Get current user uid using auth.currentUser.uid (on frontend)

 Send data to Express backend with uid in the body

 In Express, receive and store data in MongoDB using that uid

 Create route to fetch all progress data by uid

 Add PATCH/PUT route to update progress entry by uid + date

 (Optional) Send Firebase Auth token in header and verify it in backend using firebase-admin

 Use fetched data in Dashboard to show charts, streaks, etc.

 Structure MongoDB schema for progress (fields: uid, date, mood, productivity, description)


 ----------

 19th July 

 1. Integration of backend is completed
 2. Used mongodb and express for creating the backend
 3. Integration with frontend is also done

Making this web app production level

1. Make more good UI
2. Make production ready
3. Make good and give it to one user
4. Make protected routes for backend server apis as well



20th July Task 

1. Last 30 Days +10% - Calculation
2. Daily should form should be only filled only after office work > Completed > ✅
3. Form validation is must > Completed > ✅
4. Form submit > backend check > if today's date is matching > Then show error message on frontend > ✅
7. MVP PRODUCTION LEVEL CODE - ✅ Released
8. Github > ✅ Completed 
9. Component Web app > Restructure > ✅ Completed 

Now working on UI


21st July Task

5. We will filter the history tab accordingly
6. Make the chart tooltip for when it productivity level is less then show why it was less and what went wrong

Important Step - Make component tree strucutire and use state management too > Completed
1. Code is optimzied
2. Used zustand for state management
